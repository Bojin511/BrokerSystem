//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "FK_broker_commission_rate_brokers", "brokers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.brokers), "broker_commission_rate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.broker_commission_rate), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "FK_broker_favourite_companies_brokers", "brokers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.brokers), "broker_favourite_companies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.broker_favourite_companies), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "FK_share_holder_broker_brokers", "brokers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.brokers), "share_holder_broker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.share_holder_broker), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "trade_broker_fk", "brokers", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.brokers), "trades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.trades), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "comp_place_fk", "places", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.places), "companies", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.companies), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "share_company_fk", "companies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.companies), "shares", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.shares), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "share_currency_fk", "currencies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.currencies), "shares", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.shares), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "se_place_fk", "places", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.places), "stock_exchanges", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.stock_exchanges), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "FK_share_holder_broker_share_holders", "share_holders", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.share_holders), "share_holder_broker", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.share_holder_broker), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "trade_share_hold_id", "share_holders", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.share_holders), "trades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.trades), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "fk_sa_share_id", "shares", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.shares), "shares_amounts", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.shares_amounts), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "shares_prices_fk", "shares", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.shares), "shares_prices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.shares_prices), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "trade_share_fk", "shares", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.shares), "trades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.trades), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "trade_stock_ex_fk", "stock_exchanges", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.stock_exchanges), "trades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.trades), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "trade_transaction_fk", "transaction_types", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrokerSystem.Models.transaction_types), "trades", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.trades), true)]
[assembly: EdmRelationshipAttribute("xmlDBOrigModel", "FK_UserRequests_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrokerSystem.Models.Users), "UserRequests", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrokerSystem.Models.UserRequests), true)]

#endregion

namespace BrokerSystem.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class xmlDBOrigEntities1 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new xmlDBOrigEntities1 object using the connection string found in the 'xmlDBOrigEntities1' section of the application configuration file.
        /// </summary>
        public xmlDBOrigEntities1() : base("name=xmlDBOrigEntities1", "xmlDBOrigEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new xmlDBOrigEntities1 object.
        /// </summary>
        public xmlDBOrigEntities1(string connectionString) : base(connectionString, "xmlDBOrigEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new xmlDBOrigEntities1 object.
        /// </summary>
        public xmlDBOrigEntities1(EntityConnection connection) : base(connection, "xmlDBOrigEntities1")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<broker_commission_rate> broker_commission_rate
        {
            get
            {
                if ((_broker_commission_rate == null))
                {
                    _broker_commission_rate = base.CreateObjectSet<broker_commission_rate>("broker_commission_rate");
                }
                return _broker_commission_rate;
            }
        }
        private ObjectSet<broker_commission_rate> _broker_commission_rate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<broker_favourite_companies> broker_favourite_companies
        {
            get
            {
                if ((_broker_favourite_companies == null))
                {
                    _broker_favourite_companies = base.CreateObjectSet<broker_favourite_companies>("broker_favourite_companies");
                }
                return _broker_favourite_companies;
            }
        }
        private ObjectSet<broker_favourite_companies> _broker_favourite_companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<broker_stock_ex> broker_stock_ex
        {
            get
            {
                if ((_broker_stock_ex == null))
                {
                    _broker_stock_ex = base.CreateObjectSet<broker_stock_ex>("broker_stock_ex");
                }
                return _broker_stock_ex;
            }
        }
        private ObjectSet<broker_stock_ex> _broker_stock_ex;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<broker_watch_list> broker_watch_list
        {
            get
            {
                if ((_broker_watch_list == null))
                {
                    _broker_watch_list = base.CreateObjectSet<broker_watch_list>("broker_watch_list");
                }
                return _broker_watch_list;
            }
        }
        private ObjectSet<broker_watch_list> _broker_watch_list;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<brokers> brokers
        {
            get
            {
                if ((_brokers == null))
                {
                    _brokers = base.CreateObjectSet<brokers>("brokers");
                }
                return _brokers;
            }
        }
        private ObjectSet<brokers> _brokers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<companies> companies
        {
            get
            {
                if ((_companies == null))
                {
                    _companies = base.CreateObjectSet<companies>("companies");
                }
                return _companies;
            }
        }
        private ObjectSet<companies> _companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<currencies> currencies
        {
            get
            {
                if ((_currencies == null))
                {
                    _currencies = base.CreateObjectSet<currencies>("currencies");
                }
                return _currencies;
            }
        }
        private ObjectSet<currencies> _currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<loginLog> loginLog
        {
            get
            {
                if ((_loginLog == null))
                {
                    _loginLog = base.CreateObjectSet<loginLog>("loginLog");
                }
                return _loginLog;
            }
        }
        private ObjectSet<loginLog> _loginLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<places> places
        {
            get
            {
                if ((_places == null))
                {
                    _places = base.CreateObjectSet<places>("places");
                }
                return _places;
            }
        }
        private ObjectSet<places> _places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<share_holder_broker> share_holder_broker
        {
            get
            {
                if ((_share_holder_broker == null))
                {
                    _share_holder_broker = base.CreateObjectSet<share_holder_broker>("share_holder_broker");
                }
                return _share_holder_broker;
            }
        }
        private ObjectSet<share_holder_broker> _share_holder_broker;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<share_holder_trade_request> share_holder_trade_request
        {
            get
            {
                if ((_share_holder_trade_request == null))
                {
                    _share_holder_trade_request = base.CreateObjectSet<share_holder_trade_request>("share_holder_trade_request");
                }
                return _share_holder_trade_request;
            }
        }
        private ObjectSet<share_holder_trade_request> _share_holder_trade_request;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<share_holders> share_holders
        {
            get
            {
                if ((_share_holders == null))
                {
                    _share_holders = base.CreateObjectSet<share_holders>("share_holders");
                }
                return _share_holders;
            }
        }
        private ObjectSet<share_holders> _share_holders;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<shares> shares
        {
            get
            {
                if ((_shares == null))
                {
                    _shares = base.CreateObjectSet<shares>("shares");
                }
                return _shares;
            }
        }
        private ObjectSet<shares> _shares;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<shares_amounts> shares_amounts
        {
            get
            {
                if ((_shares_amounts == null))
                {
                    _shares_amounts = base.CreateObjectSet<shares_amounts>("shares_amounts");
                }
                return _shares_amounts;
            }
        }
        private ObjectSet<shares_amounts> _shares_amounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<shares_prices> shares_prices
        {
            get
            {
                if ((_shares_prices == null))
                {
                    _shares_prices = base.CreateObjectSet<shares_prices>("shares_prices");
                }
                return _shares_prices;
            }
        }
        private ObjectSet<shares_prices> _shares_prices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<stock_exchanges> stock_exchanges
        {
            get
            {
                if ((_stock_exchanges == null))
                {
                    _stock_exchanges = base.CreateObjectSet<stock_exchanges>("stock_exchanges");
                }
                return _stock_exchanges;
            }
        }
        private ObjectSet<stock_exchanges> _stock_exchanges;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<trades> trades
        {
            get
            {
                if ((_trades == null))
                {
                    _trades = base.CreateObjectSet<trades>("trades");
                }
                return _trades;
            }
        }
        private ObjectSet<trades> _trades;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<transaction_types> transaction_types
        {
            get
            {
                if ((_transaction_types == null))
                {
                    _transaction_types = base.CreateObjectSet<transaction_types>("transaction_types");
                }
                return _transaction_types;
            }
        }
        private ObjectSet<transaction_types> _transaction_types;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserRequests> UserRequests
        {
            get
            {
                if ((_UserRequests == null))
                {
                    _UserRequests = base.CreateObjectSet<UserRequests>("UserRequests");
                }
                return _UserRequests;
            }
        }
        private ObjectSet<UserRequests> _UserRequests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the broker_commission_rate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobroker_commission_rate(broker_commission_rate broker_commission_rate)
        {
            base.AddObject("broker_commission_rate", broker_commission_rate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the broker_favourite_companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobroker_favourite_companies(broker_favourite_companies broker_favourite_companies)
        {
            base.AddObject("broker_favourite_companies", broker_favourite_companies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the broker_stock_ex EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobroker_stock_ex(broker_stock_ex broker_stock_ex)
        {
            base.AddObject("broker_stock_ex", broker_stock_ex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the broker_watch_list EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobroker_watch_list(broker_watch_list broker_watch_list)
        {
            base.AddObject("broker_watch_list", broker_watch_list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the brokers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTobrokers(brokers brokers)
        {
            base.AddObject("brokers", brokers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocompanies(companies companies)
        {
            base.AddObject("companies", companies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTocurrencies(currencies currencies)
        {
            base.AddObject("currencies", currencies);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the loginLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTologinLog(loginLog loginLog)
        {
            base.AddObject("loginLog", loginLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToplaces(places places)
        {
            base.AddObject("places", places);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the share_holder_broker EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshare_holder_broker(share_holder_broker share_holder_broker)
        {
            base.AddObject("share_holder_broker", share_holder_broker);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the share_holder_trade_request EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshare_holder_trade_request(share_holder_trade_request share_holder_trade_request)
        {
            base.AddObject("share_holder_trade_request", share_holder_trade_request);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the share_holders EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshare_holders(share_holders share_holders)
        {
            base.AddObject("share_holders", share_holders);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the shares EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshares(shares shares)
        {
            base.AddObject("shares", shares);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the shares_amounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshares_amounts(shares_amounts shares_amounts)
        {
            base.AddObject("shares_amounts", shares_amounts);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the shares_prices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToshares_prices(shares_prices shares_prices)
        {
            base.AddObject("shares_prices", shares_prices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the stock_exchanges EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTostock_exchanges(stock_exchanges stock_exchanges)
        {
            base.AddObject("stock_exchanges", stock_exchanges);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the trades EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotrades(trades trades)
        {
            base.AddObject("trades", trades);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the transaction_types EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotransaction_types(transaction_types transaction_types)
        {
            base.AddObject("transaction_types", transaction_types);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserRequests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserRequests(UserRequests userRequests)
        {
            base.AddObject("UserRequests", userRequests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="broker_commission_rate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class broker_commission_rate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new broker_commission_rate object.
        /// </summary>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="rate">Initial value of the rate property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static broker_commission_rate Createbroker_commission_rate(global::System.Int32 broker_id, global::System.Double rate, global::System.Int64 id)
        {
            broker_commission_rate broker_commission_rate = new broker_commission_rate();
            broker_commission_rate.broker_id = broker_id;
            broker_commission_rate.rate = rate;
            broker_commission_rate.id = id;
            return broker_commission_rate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double rate
        {
            get
            {
                return _rate;
            }
            set
            {
                OnrateChanging(value);
                ReportPropertyChanging("rate");
                _rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("rate");
                OnrateChanged();
            }
        }
        private global::System.Double _rate;
        partial void OnrateChanging(global::System.Double value);
        partial void OnrateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_broker_commission_rate_brokers", "brokers")]
        public brokers brokers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "brokers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "brokers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brokers> brokersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "brokers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<brokers>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "brokers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="broker_favourite_companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class broker_favourite_companies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new broker_favourite_companies object.
        /// </summary>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="company_id">Initial value of the company_id property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static broker_favourite_companies Createbroker_favourite_companies(global::System.Int32 broker_id, global::System.Int32 company_id, global::System.Int64 id)
        {
            broker_favourite_companies broker_favourite_companies = new broker_favourite_companies();
            broker_favourite_companies.broker_id = broker_id;
            broker_favourite_companies.company_id = company_id;
            broker_favourite_companies.id = id;
            return broker_favourite_companies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 company_id
        {
            get
            {
                return _company_id;
            }
            set
            {
                Oncompany_idChanging(value);
                ReportPropertyChanging("company_id");
                _company_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("company_id");
                Oncompany_idChanged();
            }
        }
        private global::System.Int32 _company_id;
        partial void Oncompany_idChanging(global::System.Int32 value);
        partial void Oncompany_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_broker_favourite_companies_brokers", "brokers")]
        public brokers brokers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "brokers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "brokers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brokers> brokersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "brokers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<brokers>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "brokers", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="broker_stock_ex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class broker_stock_ex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new broker_stock_ex object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static broker_stock_ex Createbroker_stock_ex(global::System.Int64 id)
        {
            broker_stock_ex broker_stock_ex = new broker_stock_ex();
            broker_stock_ex.id = id;
            return broker_stock_ex;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private Nullable<global::System.Int32> _broker_id;
        partial void Onbroker_idChanging(Nullable<global::System.Int32> value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stock_ex_id
        {
            get
            {
                return _stock_ex_id;
            }
            set
            {
                Onstock_ex_idChanging(value);
                ReportPropertyChanging("stock_ex_id");
                _stock_ex_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stock_ex_id");
                Onstock_ex_idChanged();
            }
        }
        private Nullable<global::System.Int32> _stock_ex_id;
        partial void Onstock_ex_idChanging(Nullable<global::System.Int32> value);
        partial void Onstock_ex_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="broker_watch_list")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class broker_watch_list : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new broker_watch_list object.
        /// </summary>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="company_id">Initial value of the company_id property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static broker_watch_list Createbroker_watch_list(global::System.Int32 broker_id, global::System.Int32 company_id, global::System.Int64 id)
        {
            broker_watch_list broker_watch_list = new broker_watch_list();
            broker_watch_list.broker_id = broker_id;
            broker_watch_list.company_id = company_id;
            broker_watch_list.id = id;
            return broker_watch_list;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 company_id
        {
            get
            {
                return _company_id;
            }
            set
            {
                Oncompany_idChanging(value);
                ReportPropertyChanging("company_id");
                _company_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("company_id");
                Oncompany_idChanged();
            }
        }
        private global::System.Int32 _company_id;
        partial void Oncompany_idChanging(global::System.Int32 value);
        partial void Oncompany_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="brokers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class brokers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new brokers object.
        /// </summary>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        public static brokers Createbrokers(global::System.Int32 broker_id)
        {
            brokers brokers = new brokers();
            brokers.broker_id = broker_id;
            return brokers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                if (_broker_id != value)
                {
                    Onbroker_idChanging(value);
                    ReportPropertyChanging("broker_id");
                    _broker_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("broker_id");
                    Onbroker_idChanged();
                }
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_broker_commission_rate_brokers", "broker_commission_rate")]
        public EntityCollection<broker_commission_rate> broker_commission_rate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<broker_commission_rate>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "broker_commission_rate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<broker_commission_rate>("xmlDBOrigModel.FK_broker_commission_rate_brokers", "broker_commission_rate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_broker_favourite_companies_brokers", "broker_favourite_companies")]
        public EntityCollection<broker_favourite_companies> broker_favourite_companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<broker_favourite_companies>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "broker_favourite_companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<broker_favourite_companies>("xmlDBOrigModel.FK_broker_favourite_companies_brokers", "broker_favourite_companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_share_holder_broker_brokers", "share_holder_broker")]
        public EntityCollection<share_holder_broker> share_holder_broker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<share_holder_broker>("xmlDBOrigModel.FK_share_holder_broker_brokers", "share_holder_broker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<share_holder_broker>("xmlDBOrigModel.FK_share_holder_broker_brokers", "share_holder_broker", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_broker_fk", "trades")]
        public EntityCollection<trades> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trades>("xmlDBOrigModel.trade_broker_fk", "trades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trades>("xmlDBOrigModel.trade_broker_fk", "trades", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="companies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class companies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new companies object.
        /// </summary>
        /// <param name="company_id">Initial value of the company_id property.</param>
        public static companies Createcompanies(global::System.Int32 company_id)
        {
            companies companies = new companies();
            companies.company_id = company_id;
            return companies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 company_id
        {
            get
            {
                return _company_id;
            }
            set
            {
                if (_company_id != value)
                {
                    Oncompany_idChanging(value);
                    ReportPropertyChanging("company_id");
                    _company_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("company_id");
                    Oncompany_idChanged();
                }
            }
        }
        private global::System.Int32 _company_id;
        partial void Oncompany_idChanging(global::System.Int32 value);
        partial void Oncompany_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> place_id
        {
            get
            {
                return _place_id;
            }
            set
            {
                Onplace_idChanging(value);
                ReportPropertyChanging("place_id");
                _place_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("place_id");
                Onplace_idChanged();
            }
        }
        private Nullable<global::System.Int32> _place_id;
        partial void Onplace_idChanging(Nullable<global::System.Int32> value);
        partial void Onplace_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "comp_place_fk", "places")]
        public places places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.comp_place_fk", "places").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.comp_place_fk", "places").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<places> placesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.comp_place_fk", "places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<places>("xmlDBOrigModel.comp_place_fk", "places", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "share_company_fk", "shares")]
        public EntityCollection<shares> shares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<shares>("xmlDBOrigModel.share_company_fk", "shares");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<shares>("xmlDBOrigModel.share_company_fk", "shares", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="currencies")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class currencies : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new currencies object.
        /// </summary>
        /// <param name="currency_id">Initial value of the currency_id property.</param>
        public static currencies Createcurrencies(global::System.Int32 currency_id)
        {
            currencies currencies = new currencies();
            currencies.currency_id = currency_id;
            return currencies;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                if (_currency_id != value)
                {
                    Oncurrency_idChanging(value);
                    ReportPropertyChanging("currency_id");
                    _currency_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("currency_id");
                    Oncurrency_idChanged();
                }
            }
        }
        private global::System.Int32 _currency_id;
        partial void Oncurrency_idChanging(global::System.Int32 value);
        partial void Oncurrency_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "share_currency_fk", "shares")]
        public EntityCollection<shares> shares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<shares>("xmlDBOrigModel.share_currency_fk", "shares");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<shares>("xmlDBOrigModel.share_currency_fk", "shares", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="loginLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class loginLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new loginLog object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="attempt">Initial value of the attempt property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static loginLog CreateloginLog(global::System.String username, global::System.String attempt, global::System.Int64 id)
        {
            loginLog loginLog = new loginLog();
            loginLog.username = username;
            loginLog.attempt = attempt;
            loginLog.id = id;
            return loginLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String attempt
        {
            get
            {
                return _attempt;
            }
            set
            {
                OnattemptChanging(value);
                ReportPropertyChanging("attempt");
                _attempt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("attempt");
                OnattemptChanged();
            }
        }
        private global::System.String _attempt;
        partial void OnattemptChanging(global::System.String value);
        partial void OnattemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="places")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class places : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new places object.
        /// </summary>
        /// <param name="place_id">Initial value of the place_id property.</param>
        public static places Createplaces(global::System.Int32 place_id)
        {
            places places = new places();
            places.place_id = place_id;
            return places;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 place_id
        {
            get
            {
                return _place_id;
            }
            set
            {
                if (_place_id != value)
                {
                    Onplace_idChanging(value);
                    ReportPropertyChanging("place_id");
                    _place_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("place_id");
                    Onplace_idChanged();
                }
            }
        }
        private global::System.Int32 _place_id;
        partial void Onplace_idChanging(global::System.Int32 value);
        partial void Onplace_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String country
        {
            get
            {
                return _country;
            }
            set
            {
                OncountryChanging(value);
                ReportPropertyChanging("country");
                _country = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("country");
                OncountryChanged();
            }
        }
        private global::System.String _country;
        partial void OncountryChanging(global::System.String value);
        partial void OncountryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "comp_place_fk", "companies")]
        public EntityCollection<companies> companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<companies>("xmlDBOrigModel.comp_place_fk", "companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<companies>("xmlDBOrigModel.comp_place_fk", "companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "se_place_fk", "stock_exchanges")]
        public EntityCollection<stock_exchanges> stock_exchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<stock_exchanges>("xmlDBOrigModel.se_place_fk", "stock_exchanges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<stock_exchanges>("xmlDBOrigModel.se_place_fk", "stock_exchanges", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="share_holder_broker")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class share_holder_broker : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new share_holder_broker object.
        /// </summary>
        /// <param name="share_holder_id">Initial value of the share_holder_id property.</param>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static share_holder_broker Createshare_holder_broker(global::System.Int32 share_holder_id, global::System.Int32 broker_id, global::System.Int64 id)
        {
            share_holder_broker share_holder_broker = new share_holder_broker();
            share_holder_broker.share_holder_id = share_holder_id;
            share_holder_broker.broker_id = broker_id;
            share_holder_broker.id = id;
            return share_holder_broker;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_holder_id
        {
            get
            {
                return _share_holder_id;
            }
            set
            {
                Onshare_holder_idChanging(value);
                ReportPropertyChanging("share_holder_id");
                _share_holder_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_holder_id");
                Onshare_holder_idChanged();
            }
        }
        private global::System.Int32 _share_holder_id;
        partial void Onshare_holder_idChanging(global::System.Int32 value);
        partial void Onshare_holder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_share_holder_broker_brokers", "brokers")]
        public brokers brokers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_share_holder_broker_brokers", "brokers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_share_holder_broker_brokers", "brokers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brokers> brokersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.FK_share_holder_broker_brokers", "brokers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<brokers>("xmlDBOrigModel.FK_share_holder_broker_brokers", "brokers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_share_holder_broker_share_holders", "share_holders")]
        public share_holders share_holders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<share_holders> share_holdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<share_holders>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holders", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="share_holder_trade_request")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class share_holder_trade_request : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new share_holder_trade_request object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="share_id">Initial value of the share_id property.</param>
        /// <param name="broker_id">Initial value of the broker_id property.</param>
        /// <param name="share_holder_id">Initial value of the share_holder_id property.</param>
        /// <param name="stock_ex_id">Initial value of the stock_ex_id property.</param>
        /// <param name="transaction_type">Initial value of the transaction_type property.</param>
        /// <param name="share_amount">Initial value of the share_amount property.</param>
        public static share_holder_trade_request Createshare_holder_trade_request(global::System.Int64 id, global::System.Int32 share_id, global::System.Int32 broker_id, global::System.Int32 share_holder_id, global::System.Int32 stock_ex_id, global::System.Int32 transaction_type, global::System.Int32 share_amount)
        {
            share_holder_trade_request share_holder_trade_request = new share_holder_trade_request();
            share_holder_trade_request.id = id;
            share_holder_trade_request.share_id = share_id;
            share_holder_trade_request.broker_id = broker_id;
            share_holder_trade_request.share_holder_id = share_holder_id;
            share_holder_trade_request.stock_ex_id = stock_ex_id;
            share_holder_trade_request.transaction_type = transaction_type;
            share_holder_trade_request.share_amount = share_amount;
            return share_holder_trade_request;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_id
        {
            get
            {
                return _share_id;
            }
            set
            {
                Onshare_idChanging(value);
                ReportPropertyChanging("share_id");
                _share_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_id");
                Onshare_idChanged();
            }
        }
        private global::System.Int32 _share_id;
        partial void Onshare_idChanging(global::System.Int32 value);
        partial void Onshare_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private global::System.Int32 _broker_id;
        partial void Onbroker_idChanging(global::System.Int32 value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_holder_id
        {
            get
            {
                return _share_holder_id;
            }
            set
            {
                Onshare_holder_idChanging(value);
                ReportPropertyChanging("share_holder_id");
                _share_holder_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_holder_id");
                Onshare_holder_idChanged();
            }
        }
        private global::System.Int32 _share_holder_id;
        partial void Onshare_holder_idChanging(global::System.Int32 value);
        partial void Onshare_holder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 stock_ex_id
        {
            get
            {
                return _stock_ex_id;
            }
            set
            {
                Onstock_ex_idChanging(value);
                ReportPropertyChanging("stock_ex_id");
                _stock_ex_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stock_ex_id");
                Onstock_ex_idChanged();
            }
        }
        private global::System.Int32 _stock_ex_id;
        partial void Onstock_ex_idChanging(global::System.Int32 value);
        partial void Onstock_ex_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 transaction_type
        {
            get
            {
                return _transaction_type;
            }
            set
            {
                Ontransaction_typeChanging(value);
                ReportPropertyChanging("transaction_type");
                _transaction_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transaction_type");
                Ontransaction_typeChanged();
            }
        }
        private global::System.Int32 _transaction_type;
        partial void Ontransaction_typeChanging(global::System.Int32 value);
        partial void Ontransaction_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_amount
        {
            get
            {
                return _share_amount;
            }
            set
            {
                Onshare_amountChanging(value);
                ReportPropertyChanging("share_amount");
                _share_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_amount");
                Onshare_amountChanged();
            }
        }
        private global::System.Int32 _share_amount;
        partial void Onshare_amountChanging(global::System.Int32 value);
        partial void Onshare_amountChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="share_holders")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class share_holders : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new share_holders object.
        /// </summary>
        /// <param name="share_holder_id">Initial value of the share_holder_id property.</param>
        public static share_holders Createshare_holders(global::System.Int32 share_holder_id)
        {
            share_holders share_holders = new share_holders();
            share_holders.share_holder_id = share_holder_id;
            return share_holders;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_holder_id
        {
            get
            {
                return _share_holder_id;
            }
            set
            {
                if (_share_holder_id != value)
                {
                    Onshare_holder_idChanging(value);
                    ReportPropertyChanging("share_holder_id");
                    _share_holder_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("share_holder_id");
                    Onshare_holder_idChanged();
                }
            }
        }
        private global::System.Int32 _share_holder_id;
        partial void Onshare_holder_idChanging(global::System.Int32 value);
        partial void Onshare_holder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_share_holder_broker_share_holders", "share_holder_broker")]
        public EntityCollection<share_holder_broker> share_holder_broker
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<share_holder_broker>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holder_broker");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<share_holder_broker>("xmlDBOrigModel.FK_share_holder_broker_share_holders", "share_holder_broker", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_share_hold_id", "trades")]
        public EntityCollection<trades> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trades>("xmlDBOrigModel.trade_share_hold_id", "trades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trades>("xmlDBOrigModel.trade_share_hold_id", "trades", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="shares")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class shares : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new shares object.
        /// </summary>
        /// <param name="share_id">Initial value of the share_id property.</param>
        public static shares Createshares(global::System.Int32 share_id)
        {
            shares shares = new shares();
            shares.share_id = share_id;
            return shares;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_id
        {
            get
            {
                return _share_id;
            }
            set
            {
                if (_share_id != value)
                {
                    Onshare_idChanging(value);
                    ReportPropertyChanging("share_id");
                    _share_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("share_id");
                    Onshare_idChanged();
                }
            }
        }
        private global::System.Int32 _share_id;
        partial void Onshare_idChanging(global::System.Int32 value);
        partial void Onshare_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> company_id
        {
            get
            {
                return _company_id;
            }
            set
            {
                Oncompany_idChanging(value);
                ReportPropertyChanging("company_id");
                _company_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("company_id");
                Oncompany_idChanged();
            }
        }
        private Nullable<global::System.Int32> _company_id;
        partial void Oncompany_idChanging(Nullable<global::System.Int32> value);
        partial void Oncompany_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> currency_id
        {
            get
            {
                return _currency_id;
            }
            set
            {
                Oncurrency_idChanging(value);
                ReportPropertyChanging("currency_id");
                _currency_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("currency_id");
                Oncurrency_idChanged();
            }
        }
        private Nullable<global::System.Int32> _currency_id;
        partial void Oncurrency_idChanging(Nullable<global::System.Int32> value);
        partial void Oncurrency_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "share_company_fk", "companies")]
        public companies companies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<companies>("xmlDBOrigModel.share_company_fk", "companies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<companies>("xmlDBOrigModel.share_company_fk", "companies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<companies> companiesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<companies>("xmlDBOrigModel.share_company_fk", "companies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<companies>("xmlDBOrigModel.share_company_fk", "companies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "share_currency_fk", "currencies")]
        public currencies currencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencies>("xmlDBOrigModel.share_currency_fk", "currencies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencies>("xmlDBOrigModel.share_currency_fk", "currencies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<currencies> currenciesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<currencies>("xmlDBOrigModel.share_currency_fk", "currencies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<currencies>("xmlDBOrigModel.share_currency_fk", "currencies", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "fk_sa_share_id", "shares_amounts")]
        public EntityCollection<shares_amounts> shares_amounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<shares_amounts>("xmlDBOrigModel.fk_sa_share_id", "shares_amounts");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<shares_amounts>("xmlDBOrigModel.fk_sa_share_id", "shares_amounts", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "shares_prices_fk", "shares_prices")]
        public EntityCollection<shares_prices> shares_prices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<shares_prices>("xmlDBOrigModel.shares_prices_fk", "shares_prices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<shares_prices>("xmlDBOrigModel.shares_prices_fk", "shares_prices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_share_fk", "trades")]
        public EntityCollection<trades> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trades>("xmlDBOrigModel.trade_share_fk", "trades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trades>("xmlDBOrigModel.trade_share_fk", "trades", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="shares_amounts")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class shares_amounts : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new shares_amounts object.
        /// </summary>
        /// <param name="share_issue_id">Initial value of the share_issue_id property.</param>
        public static shares_amounts Createshares_amounts(global::System.Int32 share_issue_id)
        {
            shares_amounts shares_amounts = new shares_amounts();
            shares_amounts.share_issue_id = share_issue_id;
            return shares_amounts;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_issue_id
        {
            get
            {
                return _share_issue_id;
            }
            set
            {
                if (_share_issue_id != value)
                {
                    Onshare_issue_idChanging(value);
                    ReportPropertyChanging("share_issue_id");
                    _share_issue_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("share_issue_id");
                    Onshare_issue_idChanged();
                }
            }
        }
        private global::System.Int32 _share_issue_id;
        partial void Onshare_issue_idChanging(global::System.Int32 value);
        partial void Onshare_issue_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> share_id
        {
            get
            {
                return _share_id;
            }
            set
            {
                Onshare_idChanging(value);
                ReportPropertyChanging("share_id");
                _share_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_id");
                Onshare_idChanged();
            }
        }
        private Nullable<global::System.Int32> _share_id;
        partial void Onshare_idChanging(Nullable<global::System.Int32> value);
        partial void Onshare_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> issued
        {
            get
            {
                return _issued;
            }
            set
            {
                OnissuedChanging(value);
                ReportPropertyChanging("issued");
                _issued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("issued");
                OnissuedChanged();
            }
        }
        private Nullable<global::System.Int32> _issued;
        partial void OnissuedChanging(Nullable<global::System.Int32> value);
        partial void OnissuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_start
        {
            get
            {
                return _date_start;
            }
            set
            {
                Ondate_startChanging(value);
                ReportPropertyChanging("date_start");
                _date_start = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_start");
                Ondate_startChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_start;
        partial void Ondate_startChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_startChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> date_end
        {
            get
            {
                return _date_end;
            }
            set
            {
                Ondate_endChanging(value);
                ReportPropertyChanging("date_end");
                _date_end = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("date_end");
                Ondate_endChanged();
            }
        }
        private Nullable<global::System.DateTime> _date_end;
        partial void Ondate_endChanging(Nullable<global::System.DateTime> value);
        partial void Ondate_endChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "fk_sa_share_id", "shares")]
        public shares shares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.fk_sa_share_id", "shares").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.fk_sa_share_id", "shares").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<shares> sharesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.fk_sa_share_id", "shares");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<shares>("xmlDBOrigModel.fk_sa_share_id", "shares", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="shares_prices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class shares_prices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new shares_prices object.
        /// </summary>
        /// <param name="share_id">Initial value of the share_id property.</param>
        /// <param name="time_start">Initial value of the time_start property.</param>
        public static shares_prices Createshares_prices(global::System.Int32 share_id, global::System.DateTime time_start)
        {
            shares_prices shares_prices = new shares_prices();
            shares_prices.share_id = share_id;
            shares_prices.time_start = time_start;
            return shares_prices;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 share_id
        {
            get
            {
                return _share_id;
            }
            set
            {
                if (_share_id != value)
                {
                    Onshare_idChanging(value);
                    ReportPropertyChanging("share_id");
                    _share_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("share_id");
                    Onshare_idChanged();
                }
            }
        }
        private global::System.Int32 _share_id;
        partial void Onshare_idChanging(global::System.Int32 value);
        partial void Onshare_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _price;
        partial void OnpriceChanging(Nullable<global::System.Decimal> value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime time_start
        {
            get
            {
                return _time_start;
            }
            set
            {
                if (_time_start != value)
                {
                    Ontime_startChanging(value);
                    ReportPropertyChanging("time_start");
                    _time_start = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("time_start");
                    Ontime_startChanged();
                }
            }
        }
        private global::System.DateTime _time_start;
        partial void Ontime_startChanging(global::System.DateTime value);
        partial void Ontime_startChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> time_end
        {
            get
            {
                return _time_end;
            }
            set
            {
                Ontime_endChanging(value);
                ReportPropertyChanging("time_end");
                _time_end = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("time_end");
                Ontime_endChanged();
            }
        }
        private Nullable<global::System.DateTime> _time_end;
        partial void Ontime_endChanging(Nullable<global::System.DateTime> value);
        partial void Ontime_endChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "shares_prices_fk", "shares")]
        public shares shares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.shares_prices_fk", "shares").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.shares_prices_fk", "shares").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<shares> sharesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.shares_prices_fk", "shares");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<shares>("xmlDBOrigModel.shares_prices_fk", "shares", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="stock_exchanges")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class stock_exchanges : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new stock_exchanges object.
        /// </summary>
        /// <param name="stock_ex_id">Initial value of the stock_ex_id property.</param>
        public static stock_exchanges Createstock_exchanges(global::System.Int32 stock_ex_id)
        {
            stock_exchanges stock_exchanges = new stock_exchanges();
            stock_exchanges.stock_ex_id = stock_ex_id;
            return stock_exchanges;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 stock_ex_id
        {
            get
            {
                return _stock_ex_id;
            }
            set
            {
                if (_stock_ex_id != value)
                {
                    Onstock_ex_idChanging(value);
                    ReportPropertyChanging("stock_ex_id");
                    _stock_ex_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("stock_ex_id");
                    Onstock_ex_idChanged();
                }
            }
        }
        private global::System.Int32 _stock_ex_id;
        partial void Onstock_ex_idChanging(global::System.Int32 value);
        partial void Onstock_ex_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String symbol
        {
            get
            {
                return _symbol;
            }
            set
            {
                OnsymbolChanging(value);
                ReportPropertyChanging("symbol");
                _symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("symbol");
                OnsymbolChanged();
            }
        }
        private global::System.String _symbol;
        partial void OnsymbolChanging(global::System.String value);
        partial void OnsymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> place_id
        {
            get
            {
                return _place_id;
            }
            set
            {
                Onplace_idChanging(value);
                ReportPropertyChanging("place_id");
                _place_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("place_id");
                Onplace_idChanged();
            }
        }
        private Nullable<global::System.Int32> _place_id;
        partial void Onplace_idChanging(Nullable<global::System.Int32> value);
        partial void Onplace_idChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "se_place_fk", "places")]
        public places places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.se_place_fk", "places").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.se_place_fk", "places").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<places> placesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<places>("xmlDBOrigModel.se_place_fk", "places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<places>("xmlDBOrigModel.se_place_fk", "places", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_stock_ex_fk", "trades")]
        public EntityCollection<trades> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trades>("xmlDBOrigModel.trade_stock_ex_fk", "trades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trades>("xmlDBOrigModel.trade_stock_ex_fk", "trades", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagrams object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="trades")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class trades : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new trades object.
        /// </summary>
        /// <param name="trade_id">Initial value of the trade_id property.</param>
        public static trades Createtrades(global::System.Int32 trade_id)
        {
            trades trades = new trades();
            trades.trade_id = trade_id;
            return trades;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 trade_id
        {
            get
            {
                return _trade_id;
            }
            set
            {
                if (_trade_id != value)
                {
                    Ontrade_idChanging(value);
                    ReportPropertyChanging("trade_id");
                    _trade_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("trade_id");
                    Ontrade_idChanged();
                }
            }
        }
        private global::System.Int32 _trade_id;
        partial void Ontrade_idChanging(global::System.Int32 value);
        partial void Ontrade_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> share_id
        {
            get
            {
                return _share_id;
            }
            set
            {
                Onshare_idChanging(value);
                ReportPropertyChanging("share_id");
                _share_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_id");
                Onshare_idChanged();
            }
        }
        private Nullable<global::System.Int32> _share_id;
        partial void Onshare_idChanging(Nullable<global::System.Int32> value);
        partial void Onshare_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> broker_id
        {
            get
            {
                return _broker_id;
            }
            set
            {
                Onbroker_idChanging(value);
                ReportPropertyChanging("broker_id");
                _broker_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("broker_id");
                Onbroker_idChanged();
            }
        }
        private Nullable<global::System.Int32> _broker_id;
        partial void Onbroker_idChanging(Nullable<global::System.Int32> value);
        partial void Onbroker_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> share_holder_id
        {
            get
            {
                return _share_holder_id;
            }
            set
            {
                Onshare_holder_idChanging(value);
                ReportPropertyChanging("share_holder_id");
                _share_holder_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_holder_id");
                Onshare_holder_idChanged();
            }
        }
        private Nullable<global::System.Int32> _share_holder_id;
        partial void Onshare_holder_idChanging(Nullable<global::System.Int32> value);
        partial void Onshare_holder_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> stock_ex_id
        {
            get
            {
                return _stock_ex_id;
            }
            set
            {
                Onstock_ex_idChanging(value);
                ReportPropertyChanging("stock_ex_id");
                _stock_ex_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("stock_ex_id");
                Onstock_ex_idChanged();
            }
        }
        private Nullable<global::System.Int32> _stock_ex_id;
        partial void Onstock_ex_idChanging(Nullable<global::System.Int32> value);
        partial void Onstock_ex_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> transaction_type
        {
            get
            {
                return _transaction_type;
            }
            set
            {
                Ontransaction_typeChanging(value);
                ReportPropertyChanging("transaction_type");
                _transaction_type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transaction_type");
                Ontransaction_typeChanged();
            }
        }
        private Nullable<global::System.Int32> _transaction_type;
        partial void Ontransaction_typeChanging(Nullable<global::System.Int32> value);
        partial void Ontransaction_typeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> transaction_time
        {
            get
            {
                return _transaction_time;
            }
            set
            {
                Ontransaction_timeChanging(value);
                ReportPropertyChanging("transaction_time");
                _transaction_time = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("transaction_time");
                Ontransaction_timeChanged();
            }
        }
        private Nullable<global::System.DateTime> _transaction_time;
        partial void Ontransaction_timeChanging(Nullable<global::System.DateTime> value);
        partial void Ontransaction_timeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> share_amount
        {
            get
            {
                return _share_amount;
            }
            set
            {
                Onshare_amountChanging(value);
                ReportPropertyChanging("share_amount");
                _share_amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("share_amount");
                Onshare_amountChanged();
            }
        }
        private Nullable<global::System.Int32> _share_amount;
        partial void Onshare_amountChanging(Nullable<global::System.Int32> value);
        partial void Onshare_amountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> price_total
        {
            get
            {
                return _price_total;
            }
            set
            {
                Onprice_totalChanging(value);
                ReportPropertyChanging("price_total");
                _price_total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("price_total");
                Onprice_totalChanged();
            }
        }
        private Nullable<global::System.Int32> _price_total;
        partial void Onprice_totalChanging(Nullable<global::System.Int32> value);
        partial void Onprice_totalChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_broker_fk", "brokers")]
        public brokers brokers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.trade_broker_fk", "brokers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.trade_broker_fk", "brokers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brokers> brokersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<brokers>("xmlDBOrigModel.trade_broker_fk", "brokers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<brokers>("xmlDBOrigModel.trade_broker_fk", "brokers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_share_hold_id", "share_holders")]
        public share_holders share_holders
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.trade_share_hold_id", "share_holders").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.trade_share_hold_id", "share_holders").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<share_holders> share_holdersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<share_holders>("xmlDBOrigModel.trade_share_hold_id", "share_holders");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<share_holders>("xmlDBOrigModel.trade_share_hold_id", "share_holders", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_share_fk", "shares")]
        public shares shares
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.trade_share_fk", "shares").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.trade_share_fk", "shares").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<shares> sharesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<shares>("xmlDBOrigModel.trade_share_fk", "shares");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<shares>("xmlDBOrigModel.trade_share_fk", "shares", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_stock_ex_fk", "stock_exchanges")]
        public stock_exchanges stock_exchanges
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock_exchanges>("xmlDBOrigModel.trade_stock_ex_fk", "stock_exchanges").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock_exchanges>("xmlDBOrigModel.trade_stock_ex_fk", "stock_exchanges").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<stock_exchanges> stock_exchangesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<stock_exchanges>("xmlDBOrigModel.trade_stock_ex_fk", "stock_exchanges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<stock_exchanges>("xmlDBOrigModel.trade_stock_ex_fk", "stock_exchanges", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_transaction_fk", "transaction_types")]
        public transaction_types transaction_types
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction_types>("xmlDBOrigModel.trade_transaction_fk", "transaction_types").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction_types>("xmlDBOrigModel.trade_transaction_fk", "transaction_types").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<transaction_types> transaction_typesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<transaction_types>("xmlDBOrigModel.trade_transaction_fk", "transaction_types");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<transaction_types>("xmlDBOrigModel.trade_transaction_fk", "transaction_types", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="transaction_types")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class transaction_types : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new transaction_types object.
        /// </summary>
        /// <param name="type_id">Initial value of the type_id property.</param>
        public static transaction_types Createtransaction_types(global::System.Int32 type_id)
        {
            transaction_types transaction_types = new transaction_types();
            transaction_types.type_id = type_id;
            return transaction_types;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 type_id
        {
            get
            {
                return _type_id;
            }
            set
            {
                if (_type_id != value)
                {
                    Ontype_idChanging(value);
                    ReportPropertyChanging("type_id");
                    _type_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("type_id");
                    Ontype_idChanged();
                }
            }
        }
        private global::System.Int32 _type_id;
        partial void Ontype_idChanging(global::System.Int32 value);
        partial void Ontype_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String transaction_type
        {
            get
            {
                return _transaction_type;
            }
            set
            {
                Ontransaction_typeChanging(value);
                ReportPropertyChanging("transaction_type");
                _transaction_type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("transaction_type");
                Ontransaction_typeChanged();
            }
        }
        private global::System.String _transaction_type;
        partial void Ontransaction_typeChanging(global::System.String value);
        partial void Ontransaction_typeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "trade_transaction_fk", "trades")]
        public EntityCollection<trades> trades
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<trades>("xmlDBOrigModel.trade_transaction_fk", "trades");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<trades>("xmlDBOrigModel.trade_transaction_fk", "trades", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="UserRequests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserRequests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserRequests object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="issue">Initial value of the issue property.</param>
        /// <param name="date">Initial value of the date property.</param>
        /// <param name="status">Initial value of the status property.</param>
        /// <param name="description">Initial value of the description property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static UserRequests CreateUserRequests(global::System.String username, global::System.String issue, global::System.String date, global::System.String status, global::System.String description, global::System.Int64 id)
        {
            UserRequests userRequests = new UserRequests();
            userRequests.username = username;
            userRequests.issue = issue;
            userRequests.date = date;
            userRequests.status = status;
            userRequests.description = description;
            userRequests.id = id;
            return userRequests;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                OnusernameChanging(value);
                ReportPropertyChanging("username");
                _username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("username");
                OnusernameChanged();
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String issue
        {
            get
            {
                return _issue;
            }
            set
            {
                OnissueChanging(value);
                ReportPropertyChanging("issue");
                _issue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("issue");
                OnissueChanged();
            }
        }
        private global::System.String _issue;
        partial void OnissueChanging(global::System.String value);
        partial void OnissueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String date
        {
            get
            {
                return _date;
            }
            set
            {
                OndateChanging(value);
                ReportPropertyChanging("date");
                _date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("date");
                OndateChanged();
            }
        }
        private global::System.String _date;
        partial void OndateChanging(global::System.String value);
        partial void OndateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String description
        {
            get
            {
                return _description;
            }
            set
            {
                OndescriptionChanging(value);
                ReportPropertyChanging("description");
                _description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("description");
                OndescriptionChanged();
            }
        }
        private global::System.String _description;
        partial void OndescriptionChanging(global::System.String value);
        partial void OndescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_UserRequests_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xmlDBOrigModel.FK_UserRequests_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xmlDBOrigModel.FK_UserRequests_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("xmlDBOrigModel.FK_UserRequests_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("xmlDBOrigModel.FK_UserRequests_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="xmlDBOrigModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="username">Initial value of the username property.</param>
        /// <param name="password">Initial value of the password property.</param>
        /// <param name="first_name">Initial value of the first_name property.</param>
        /// <param name="last_name">Initial value of the last_name property.</param>
        /// <param name="email">Initial value of the email property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        /// <param name="role">Initial value of the role property.</param>
        public static Users CreateUsers(global::System.String username, global::System.String password, global::System.String first_name, global::System.String last_name, global::System.String email, global::System.String dOB, global::System.String role)
        {
            Users users = new Users();
            users.username = username;
            users.password = password;
            users.first_name = first_name;
            users.last_name = last_name;
            users.email = email;
            users.DOB = dOB;
            users.role = role;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String username
        {
            get
            {
                return _username;
            }
            set
            {
                if (_username != value)
                {
                    OnusernameChanging(value);
                    ReportPropertyChanging("username");
                    _username = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("username");
                    OnusernameChanged();
                }
            }
        }
        private global::System.String _username;
        partial void OnusernameChanging(global::System.String value);
        partial void OnusernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String password
        {
            get
            {
                return _password;
            }
            set
            {
                OnpasswordChanging(value);
                ReportPropertyChanging("password");
                _password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("password");
                OnpasswordChanged();
            }
        }
        private global::System.String _password;
        partial void OnpasswordChanging(global::System.String value);
        partial void OnpasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String first_name
        {
            get
            {
                return _first_name;
            }
            set
            {
                Onfirst_nameChanging(value);
                ReportPropertyChanging("first_name");
                _first_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("first_name");
                Onfirst_nameChanged();
            }
        }
        private global::System.String _first_name;
        partial void Onfirst_nameChanging(global::System.String value);
        partial void Onfirst_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String last_name
        {
            get
            {
                return _last_name;
            }
            set
            {
                Onlast_nameChanging(value);
                ReportPropertyChanging("last_name");
                _last_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("last_name");
                Onlast_nameChanged();
            }
        }
        private global::System.String _last_name;
        partial void Onlast_nameChanging(global::System.String value);
        partial void Onlast_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.String _DOB;
        partial void OnDOBChanging(global::System.String value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String role
        {
            get
            {
                return _role;
            }
            set
            {
                OnroleChanging(value);
                ReportPropertyChanging("role");
                _role = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("role");
                OnroleChanged();
            }
        }
        private global::System.String _role;
        partial void OnroleChanging(global::System.String value);
        partial void OnroleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("xmlDBOrigModel", "FK_UserRequests_Users", "UserRequests")]
        public EntityCollection<UserRequests> UserRequests
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserRequests>("xmlDBOrigModel.FK_UserRequests_Users", "UserRequests");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserRequests>("xmlDBOrigModel.FK_UserRequests_Users", "UserRequests", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
